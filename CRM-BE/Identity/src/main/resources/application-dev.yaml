spring:
  application:
    name: CRMWork
  datasource:
    url: jdbc:postgresql://localhost:5432/CRM_Project?reWriteBatchedInserts=true
    username: bitznomad
    password: 123123a
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    hibernate:
      ddl-auto: create-drop
    show-sql: false
    generate-ddl: true
  batch:
    jdbc:
      initialize-schema: never  # T? ??ng t?o b?ng cho Spring Batch # Không tạo lại bảng Spring Batch sau lần chạy đầu tiên
    job:
      enabled: false  # Kh�ng t? ??ng ch?y job khi kh?i ??ng ?ng d?ng
  data:
    redis:
      host: redis-16183.c302.asia-northeast1-1.gce.redns.redis-cloud.com
      port: 16183
      password: q86GvbMF0wt7iFpaFUqmmvE4FCluxVfc

  security:
        jwt:
          secretKey: OwZdPSFmr0zvDnNkfcaU9SUEG4fsask/qTtmffAIVmYzG1PjCzmiwXZbuJp5NJ9Z
        AccessExperienceTime: 30  # Thời gian hết hạn Access Token (đơn vị: phút)
        RefreshExperienceTime: 168  # Thời gian hết hạn Refresh Token (đơn vị: giờ)
  kafka:
    bootstrap-servers: ${HOST_IP_ADDRESS:localhost}:9092,${HOST_IP_ADDRESS:localhost}:9093,${HOST_IP_ADDRESS:localhost}:9094  # Đọc từ biến môi trường, cấu hình các máy chủ Kafka (các broker).
    # Nếu biến môi trường HOST_IP_ADDRESS không có giá trị, mặc định sử dụng localhost.
    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer  # Cấu hình trình tuần tự hóa giá trị của producer là JsonSerializer, có nghĩa là dữ liệu gửi đi sẽ được tuần tự hóa dưới dạng JSON.
      acks: "-1"  # Xác nhận của producer, giá trị "-1" có nghĩa là producer sẽ đợi tất cả các broker đã ghi dữ liệu thành công trước khi trả lời xác nhận.
      retries: 3  # Số lần thử lại khi có lỗi xảy ra trong quá trình gửi message. Mặc định là 3 lần thử lại.
      properties:
        request.timeout.ms: 5  # Thời gian tối đa (tính bằng mili giây) mà producer sẽ đợi để nhận phản hồi từ broker sau khi gửi message. Giá trị "1" có nghĩa là thời gian đợi là 1 mili giây.
        enable.idempotence: true  # Bật tính năng idempotence, đảm bảo rằng một message chỉ được gửi một lần và tránh gửi lại khi có sự cố mạng hoặc lỗi gửi message.
        max.in.flight.requests.per.connection: 5  # Cấu hình số lượng yêu cầu tối đa mà producer có thể gửi trên mỗi kết nối tới broker mà chưa nhận được phản hồi. Giới hạn này giúp tránh tình trạng quá tải trên broker.


server:
  port: 8080
  servlet:
    context-path: /bitznomad
springdoc:
  swagger-ui:
    path: /swagger
    tags-sorter: alpha

logging:
  level:
    org:
      springframework:
        web: DEBUG
        http: DEBUG
        batch: DEBUG # Bật logging cho Spring Batch
      hibernate:
        SQL: error  # Bật logging cho các câu lệnh SQL
        type: TRACE # Bật logging chi tiết cho các tham số SQL
outbound:
  identity:
    client-id: 1050382932656-kalm37mis8iqvkhmg4hp8dtne2d0vnas.apps.googleusercontent.com
    client-secret: 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
    redirect-uri: https://easyjob.io.vn/authenticate
